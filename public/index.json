
[{"content":"","date":"3 –∏—é–Ω—è 2024","externalUrl":null,"permalink":"/tags/bitrix24/","section":"Tags","summary":"","title":"Bitrix24","type":"tags"},{"content":"","date":"3 –∏—é–Ω—è 2024","externalUrl":null,"permalink":"/tags/esp/","section":"Tags","summary":"","title":"Esp","type":"tags"},{"content":"","date":"3 –∏—é–Ω—è 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":" ","date":"3 –∏—é–Ω—è 2024","externalUrl":null,"permalink":"/","section":"Welcome to elektronnyj bloG! üéâ","summary":" ","title":"Welcome to elektronnyj bloG! üéâ","type":"page"},{"content":"","date":"3 –∏—é–Ω—è 2024","externalUrl":null,"permalink":"/tags/%D0%BE%D0%B1%D0%BB%D0%B0%D0%BA%D0%BE/","section":"Tags","summary":"","title":"–û–±–ª–∞–∫–æ","type":"tags"},{"content":" Disclaimer # –û–ø–∏—Å–∞–Ω–Ω–æ–µ –Ω–∏–∂–µ, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º –∫ –¥–µ–π—Å—Ç–≤–∏—é, –Ω–µ –∏—Å–ø—ã—Ç–∞–Ω–æ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –∏ –ø–æ —Å—É—Ç–∏ —è–≤–ª—è–µ—Ç—Å—è –ª–∏—à—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–µ–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –æ–±–ª–∞—á–Ω—ã—Ö –ø–æ—Ä—Ç–∞–ª–æ–≤ Bitrix24.\n–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç –∑–∞–¥—É–º—ã–≤–∞–ª—Å—è –µ—â—ë –∫–æ–≥–¥–∞ –ø–æ—Ä—Ç–∞–ª—ã Bitrix24 —Å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º —Ç–∞—Ä–∏—Ñ–æ–º –ø–æ–∑–≤–æ–ª—è–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å REST api.\n–ò–¥–µ—è # –ó–∞–¥—É–º–∫–∞ —Å–ª–µ–¥—É—é—â–∞—è. –í bitrix24 –µ—Å—Ç—å –º–µ—Ö–∞–Ω–∏–∑–º PushAndPull (–ø–æ —Å—É—Ç–∏ —ç—Ç–æ –æ–±—ã—á–Ω—ã–π websocket). –û–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö \u0026ldquo;–Ω–∞ –ª–µ—Ç—É\u0026rdquo; –∏ –æ–±–º–µ–Ω–∞ —Å 1—Å \u0026ldquo;–≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏\u0026rdquo;.\n–ö–∞—Å–∞—Ç–µ–ª—å–Ω–æ 1—Å - —ç—Ç–æ —Å–∫–æ—Ä–µ–µ —É—Ö–∏—â—Ä–µ–Ω–∏–µ, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–±–µ–≥–ª–∏ –∏–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ –Ω–µ –∫–∞–∂–¥—É—é 1—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç—å –Ω–∞—Ä—É–∂—É (–¥–∞ –∏ –Ω–µ –≤—Å–µ —Ö–æ—Ç—è—Ç). –ü–æ—ç—Ç–æ–º—É –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–ª–µ–¥—É—é—â–µ–µ:\n–í –∫–∞—á–µ—Å—Ç–≤–µ —Ç–æ–∫–µ–Ω–∞ –¥–æ—Å—Ç—É–ø–∞ –º—ã –≤–≤–æ–¥–∏–º refresh_token (—Ç–æ—Ç –∫–æ–¥ —á—Ç–æ –ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ –æ–±–º–µ–Ω 1—Å) –ü–æ —ç—Ç–æ–º—É —Ç–æ–∫–µ–Ω—É 1—Å –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–æ–º–µ–Ω–∞ (–æ–±—Ä–∞—â–∞—è—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –±–∏—Ç—Ä–∏–∫—Å) –ü–æ –ø–æ–ª—É—á–µ–Ω–Ω—ã–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º - –ø–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≤–µ–±-—Å–æ–∫–µ—Ç—É –°–ª—É—à–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –¢–∞–∫ –≤–æ—Ç, —á—Ç–æ –µ—Å–ª–∏, –ø—Ä–æ–¥–µ–ª–∞—Ç—å —Ç–æ—Ç –∂–µ –ø—É—Ç—å —á—Ç–æ –∏ 1—Å, –Ω–æ –≤ –∫–æ–Ω–µ—á–Ω–æ–º –∏—Ç–æ–≥–µ —Å–ª—É—à–∞—Ç—å –Ω–µ —Å–æ–±—ã—Ç–∏—è –±–∏—Ç—Ä–∏–∫—Å–∞ –¥–ª—è –∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –∞ –Ω–∞–ø—Ä–∏–º–µ—Ä, —É–ø—Ä–∞–≤–ª—è—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏ —É–º–Ω–æ–≥–æ –¥–æ–º–∞?\n–ü–æ–≤—Ç–æ—Ä—é—Å—å. –ò–¥–µ—è –±—Ä–µ–¥–æ–≤–∞—è. –ù–µ –¥–µ–ª–∞–π—Ç–µ —É–º–Ω—ã–π –¥–æ–º –Ω–∞ –±–∏—Ç—Ä–∏–∫—Å24. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞. –ù–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è: # –ú–æ–¥—É–ª—å —Å wi-fi –Ω–∞ –±–æ—Ä—Ç—É. –Ø –≤–∑—è–ª esp-8266 (–ø—Ä–æ—Å—Ç–æ –ø–æ—Ç–æ–º—É —á—Ç–æ –ø–æ–ø–∞–ª—Å—è –ø–µ—Ä–≤—ã–º –ø–æ–¥ —Ä—É–∫—É) –†–µ–ª–µ (—Ç–∞–∫ –∂–µ –≤—ã–±–∏—Ä–∞–ª –∏–∑ —Ç–æ–≥–æ —á—Ç–æ –±—ã–ª–æ) –¢—Ä–∞–Ω–∑–∏—Å—Ç–æ—Ä (–Ω–µ —Ö–≤–∞—Ç–∞–ª–æ –º–æ—â–Ω–æ—Å—Ç–∏ –∫–ª–∞—Ü–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é —Ä–µ–ª–µ, –ø–æ—ç—Ç–æ–º—É IRF-3205) –ö–Ω–æ–ø–∫–∞ –ö–ª–µ–º–º–∞ 3 —Å–≤–µ—Ç–æ–¥–∏–æ–¥–∞ –í—Å—ë —ç—Ç–æ –±—ã–ª–æ —Å–æ–±—Ä–∞–Ω–æ –Ω–∞ –º–∞–∫–µ—Ç–Ω–æ–π –ø–ª–∞—Ç–µ, –≤ —á–µ—Ä–Ω–æ–≤–æ–º –≤–∏–¥–µ, –ø—Ä–æ—Å—Ç–æ –ø–æ—Ç–æ–º—É —á—Ç–æ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –∑–∞–¥—É–º—ã–≤–∞–ª–æ—Å—å –∫–∞–∫ —à–∞–ª–æ—Å—Ç—å. –ü—Ä–∏–≤–æ–¥–∏—Ç—å —Å—Ö–µ–º—É —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –≤—Å–µ–≥–æ —ç—Ç–æ–≥–æ –Ω–µ –±—É–¥—É, –ø–æ —Å—É—Ç–∏ —Ç—Ä–∞–Ω–∑–∏—Å—Ç–æ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≤—ã–≤–æ–¥—É D6, –∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–ª–µ. –ö–Ω–æ–ø–∫–∞ –∑–∞–¥—É–º—ã–≤–∞–ª–∞—Å—å –∫–∞–∫ —Å–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤ —Ä–µ–∂–∏–º–µ —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞). –û—Å—Ç–∞–ª—å–Ω–æ–µ –Ω–∏–∂–µ - –ø–æ –∫–æ–¥—É.\n–ö–æ–¥ # –§—É–Ω–∫—Ü–∏—è setup –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–∏–Ω—ã, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç callBack-—Ñ—É–Ω–∫—Ü–∏–∏ –≤–µ–±-—Å–æ–∫–µ—Ç–∞ (–∏—Ö —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –Ω–∏–∂–µ) –∏ –ø—Ä–æ–±—É–µ—Ç —Å—á–∏—Ç–∞—Ç—å –∏–∑ —ç–Ω–µ—Ä–≥–æ–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –ø–∞–º—è—Ç–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ wi-fi –∏ –±–∏—Ç—Ä–∏–∫—Å 24. –ï—Å–ª–∏ –∑–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ (–∫–æ—Ç–æ—Ä—É—é –º—ã –ø–æ–¥–∫–ª—é—á–∏–ª–∏ –Ω–∞ –≤—ã–≤–æ–¥ D7) - —Ç–æ —ç—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è –∏ —Å—Ç–∞—Ä—Ç—É–µ—Ç —Å–µ—Ä–≤–µ—Ä.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 void setup() { // ----- –¢–£–¢ –±—ã–ª –∫–æ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–∏–Ω–æ–≤ ------ int valueButton=digitalRead(BTN_PIN); //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ callback —Ñ—É–Ω–∫—Ü–∏–π webSocketClient.onMessage(onMessageCallback); webSocketClient.onEvent(onEventsCallback); //–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–µ–ª–µ –≤—ã–∫–ª—é—á–µ–Ω–æ digitalWrite(RELE_PIN, LOW); delay(500); //—Ö—Ä–∞–Ω–∏–º –≤ —Ç–æ–º –∂–µ –ø–æ—Ä—è–¥–∫–µ ssid, pass, refresh, device ssid=readStringFromEEPROM(0, SSID_LENGTH); Serial.println(\u0026#34;ssid:\\\u0026#34;\u0026#34;+ssid+\u0026#34;\\\u0026#34;\u0026#34;); //–ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–∂–∞—Ç–∞ –∏ ssid –∑–∞–ø–æ–ª–Ω–µ–Ω if (!valueButton\u0026amp;\u0026amp;!ssid.isEmpty()){ password=readStringFromEEPROM(SSID_LENGTH, PASS_LENGTH); refresh_token=readStringFromEEPROM(PASS_LENGTH, REFRESH_LENGTH); deviceName=readStringFromEEPROM(REFRESH_LENGTH, DEVICE_LENGTH); } else{// –ò–Ω–∞—á–µ - –∑–∞–ø—É—Å–∫–∞–µ–º –≤ —Ä–µ–∂–∏–º–µ —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞ startServer(); serverStarted=true; } } –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª –ø—Ä–æ–≥—Ä–∞–º–º—ã. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –ª–∏ –º—ã –∫ wi-fi, –µ—Å–ª–∏ –Ω–µ—Ç - –ø—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—É—â–µ–Ω –ª–∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –≤ —Ä–µ–∂–∏–º–µ —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞, –µ—Å–ª–∏ –Ω–µ—Ç - –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ wi-fi.\n1 2 3 4 5 6 7 8 9 10 11 12 void loop(){ if (WiFi.status() == WL_CONNECTED) { webSocketClient.poll(); } else{ if (serverStarted) server.handleClient(); else{ tryConnectToWifi(); } } } –¢–∞–∫ –∫–∞–∫ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤–∫–ª—é—á–µ–Ω–∏–∏ ssid –±—É–¥–µ—Ç –ø—É—Å—Ç—ã–º, —Å—Ä–∞–∑—É —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º —á—Ç–æ –∏–∑ —Å–µ–±—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è startServer –∏ handleClient:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 void startServer(){//–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –ø—Ä–∏–º–µ—Ä–æ–≤ // –ó–∞–ø—É—Å–∫ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞ (Access Point) WiFi.mode(WIFI_AP); WiFi.softAP(apSsid, apPassword); delay(100); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è server.on(\u0026#34;/\u0026#34;, handleRoot); server.begin(); delay(500); Serial.println(WiFi.softAPIP()); } void handleRoot(){ if(server.method()==HTTP_POST){//–ï—Å–ª–∏ –ø–æ—Å—Ç - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∏–Ω–∞—á–µ - –æ—Ç–¥–∞—ë–º —Å—Ç—Ä–∞–Ω–∏—á–∫—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ handleSave(); } else{ sendPage(); } } void sendPage(){//–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç—Ä–∞–Ω–∏—á–∫—É –≤ –≤–∏–¥–µ String html = \u0026#34;\u0026lt;html\u0026gt;\u0026lt;head\u0026gt;\u0026#34;; html += \u0026#34;\u0026lt;meta charset=\u0026#39;utf-8\u0026#39;\u0026gt;\u0026#34;; html += \u0026#34;\u0026lt;meta name=\u0026#39;viewport\u0026#39; content=\u0026#39;width=device-width, initial-scale=1\u0026#39;\u0026gt;\u0026#34;; html += \u0026#34;\u0026lt;/head\u0026gt;\u0026#34;; html += \u0026#34;\u0026lt;body style=\\\u0026#34;background: #03a9f4; color: #fff; font-family: sans-serif;\\\u0026#34;\u0026gt;\u0026#34;; //---------- –¢—É—Ç –µ—â—ë –¥–µ—Å—è—Ç–æ–∫ —Ç–∞–∫–∏—Ö –∂–µ –∫—Ä–∞—Å–∏–≤—ã—Ö —Å—Ç—Ä–æ–∫ ---------- html += \u0026#34;\u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt;\u0026#34;; server.send(200, \u0026#34;text/html\u0026#34;, html); } void handleSave(){ ssid = server.arg(\u0026#34;ssid\u0026#34;); password = server.arg(\u0026#34;password\u0026#34;); refresh_token = server.arg(\u0026#34;refresh_token\u0026#34;); deviceName = server.arg(\u0026#34;deviceName\u0026#34;); writeStringToEEPROM(REFRESH_LENGTH, deviceName); String html = \u0026#34;\u0026lt;html\u0026gt;\u0026lt;head\u0026gt;\u0026#34;; html += \u0026#34;\u0026lt;meta charset=\u0026#39;utf-8\u0026#39;\u0026gt;\u0026#34;; html += \u0026#34;\u0026lt;meta name=\u0026#39;viewport\u0026#39; content=\u0026#39;width=device-width, initial-scale=1\u0026#39;\u0026gt;\u0026#34;; html += \u0026#34;\u0026lt;/head\u0026gt;\u0026#34;; html += \u0026#34;\u0026lt;body\u0026gt;–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã\u0026lt;/body\u0026gt;\u0026lt;/html\u0026gt;\u0026#34;; server.send(200, \u0026#34;text/plain\u0026#34;, html); serverStarted=false; } –ü–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –ø–æ–ø—Ä–æ–±—É–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ wi-fi. –§—É–Ω–∫—Ü–∏—è –≤—Ü–µ–ª–æ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è, —Ç–∞–∫ –∂–µ –≤–∑—è—Ç–∞ –∏–∑ –ø—Ä–∏–º–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç—ã —Å wi-fi –º–æ–¥—É–ª–µ–º. –° —Ä–∞–∑–Ω–∏—Ü–µ–π –ª–∏—à—å –≤ —Ç–æ–º, —á—Ç–æ –ø–æ—Å–ª–µ 10 —Å–µ–∫—É–Ω–¥, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ wi-fi, —Å–Ω–æ–≤–∞ —Å—Ç–∞—Ä—Ç—É–µ—Ç —Ä–µ–∂–∏–º —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫. –ï—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è —É–¥–∞–ª–æ—Å—å - –æ–±–Ω–æ–≤–ª—è–µ–º refresh —Ç–æ–∫–µ–Ω.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 void tryConnectToWifi(){ serverStarted=false; WiFi.mode(WIFI_STA); WiFi.begin(ssid, password); int i=0; while (WiFi.status() != WL_CONNECTED) { Serial.println(\u0026#34;–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Wi-Fi...\u0026#34;+\u0026#39; \u0026#39;+ssid+\u0026#39; \u0026#39;+password); i++; delay(1000); if (i\u0026gt;=10){ startServer(); serverStarted=true; return; } } //–ï—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã wifi writeStringToEEPROM(0, ssid); writeStringToEEPROM(SSID_LENGTH, password); //–í–∫–ª—é—á–∞–µ–º –ø–µ—Ä–≤—ã–π —Å–≤–µ—Ç–æ–¥–∏–æ–¥ digitalWrite(LED1_PIN, HIGH); //–û–±–Ω–æ–≤–ª—è–µ–º refresh_token refreshAndConnect(); } void refreshAndConnect(){ delay(500); ResultRefresh result=refreshToken(refresh_token); if (result.access_token.isEmpty()||result.refresh_token.isEmpty()){ startServer(); serverStarted=true; return; } refresh_token=result.refresh_token; writeStringToEEPROM(PASS_LENGTH, refresh_token); client_endpoint=result.client_endpoint; access_token=result.access_token; SocketParams socketParams=getSocketParams(client_endpoint, access_token); webSocketClient.setInsecure(); webSocketClient.ping(); webSocketClient.connect(socketParams.server+\u0026#34;?CHANNEL_ID=\u0026#34;+socketParams.chanel+\u0026#34;\u0026amp;clientId=\u0026#34;+getClientId()); } –í—ã—à–µ —è –Ω–µ –æ–ø–∏—Å—ã–≤–∞—é refreshToken –∏ getSocketParams, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ —Ç–∏–ø–æ–≤—ã–µ –≤—ã–∑–æ–≤—ã rest, –Ω–æ –æ—á–µ–Ω—å –æ–±—ä—ë–º–Ω—ã–µ. refreshToken - –¥–µ–ª–∞–µ—Ç –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ https://oauth.bitrix.info/oauth/token/?grant_type=refresh_token getSocketParams - –¥–µ–ª–∞–µ—Ç –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ https://{–≤–∞—à –ø–æ—Ä—Ç–∞–ª}//rest/pull.application.config.get\n–ò –ø–æ—Å–ª–µ–¥–Ω–µ–µ - –¥–≤–µ callback —Ñ—É–Ω–∫—Ü–∏–∏.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 void onMessageCallback(WebsocketsMessage message) { String bodyRaw=message.data(); bodyRaw.replace(\u0026#34;#!NGINXNMS!#\u0026#34;, \u0026#34;\u0026#34;); bodyRaw.replace(\u0026#34;#!NGINXNME!#\u0026#34;, \u0026#34;\u0026#34;); Serial.println(bodyRaw); DynamicJsonDocument doc(2024); DeserializationError error = deserializeJson(doc, bodyRaw); if (error) { Serial.print(\u0026#34;–û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ JSON: \u0026#34;); Serial.println(error.c_str()); } else{ // –î–æ—Å—Ç—É–ø –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º JSON String command=doc[\u0026#34;text\u0026#34;][\u0026#34;command\u0026#34;].as\u0026lt;String\u0026gt;(); if (command==\u0026#34;esp\u0026#34;){ String device=doc[\u0026#34;text\u0026#34;][\u0026#34;params\u0026#34;][\u0026#34;device\u0026#34;].as\u0026lt;String\u0026gt;(); if (device==deviceName||deviceName.isEmpty()){ String value=doc[\u0026#34;text\u0026#34;][\u0026#34;params\u0026#34;][\u0026#34;value\u0026#34;].as\u0026lt;String\u0026gt;(); if(value==\u0026#34;1\u0026#34;){ digitalWrite(RELE_PIN, HIGH); } else{ digitalWrite(RELE_PIN, LOW); } Serial.println(\u0026#34;Message params: \u0026#34;+command+\u0026#34; device: \u0026#34;+device+\u0026#34; value: \u0026#34;+value); } } Serial.println(\u0026#34;Input message\u0026#34;); digitalWrite(LED5_PIN, HIGH); delay(1000); digitalWrite(LED5_PIN, LOW); } } void onEventsCallback(WebsocketsEvent event, String data) { if(event == WebsocketsEvent::ConnectionOpened) { digitalWrite(LED3_PIN, HIGH); Serial.println(\u0026#34;Connnection Opened\u0026#34;); } else if(event == WebsocketsEvent::ConnectionClosed) { refreshAndConnect(); } else if(event == WebsocketsEvent::GotPing) { Serial.println(\u0026#34;Got a Ping!\u0026#34;); } else if(event == WebsocketsEvent::GotPong) { Serial.println(\u0026#34;Got a Pong!\u0026#34;); } } –¢–æ –µ—Å—Ç—å –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∑–∞–≥–æ—Ä–∞–µ—Ç—Å—è —Å–≤–µ—Ç–æ–¥–∏–æ–¥ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–π –∫ D3. –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–±—É–µ—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å json, –∏ –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –∏ id —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (–≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Å–∫–æ–ª—å–∫–æ) —Å–æ–≤–ø–∞–¥–∞–µ—Ç - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ value —Ä–µ–ª–µ.\n–ó–∞–ø—É—Å–∫ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ # –ü–µ—Ä–≤–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ # –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–∞–Ω–∏—á–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–¥–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ wi-fi –∏ refresh_token –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n–ü–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫, –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—Å—è (—Ç–µ–ª–µ—Ñ–æ–Ω —Å–∞–º –æ—Ç–∫–ª—é—á–∏—Ç—Å—è –æ—Ç —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞), –∞ –Ω–∞ –ø–ª–∞—Ç–µ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –∑–∞–≥–æ—Ä–∏—Ç—Å—è –ø–µ—Ä–≤—ã–π (—É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ wi-fi) –∏ –≤—Ç–æ—Ä–æ–π (—É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ –±–∏—Ç—Ä–∏–∫—Å—É) —Å–≤–µ—Ç–æ–¥–∏–æ–¥—ã.\n–î–∞–ª–µ–µ, –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ç–µ—Å—Ç–∞ –Ω–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –≤ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ª–µ–¥—É—é—â—É—é –∫–æ–º–∞–Ω–¥—É:\nBX24.callMethod(\u0026#39;pull.application.event.add\u0026#39;, { \u0026#39;COMMAND\u0026#39;: \u0026#39;esp\u0026#39;, \u0026#39;PARAMS\u0026#39;: \u0026#39;{\u0026#34;value\u0026#34;:\u0026#34;1\u0026#34;}\u0026#39;, }, function(result){ console.log(result); }); –ù–∞ –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ 1 —Å–µ–∫—É–Ω–¥—É –∑–∞–≥–æ—Ä–∞–µ—Ç—Å—è —Å–∏–Ω–∏–π —Å–≤–µ—Ç–æ–¥–∏–æ–¥. –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø–æ–ª–µ value - –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—É—á–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏.\n–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏ # –í –∏–¥–µ–∞–ª–µ –∫ –Ω–∞–≥—Ä—É–∑–∫–µ –±—ã–ª–æ –±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å –ª–∞–º–ø–æ—á–∫—É, —É –Ω–µ—ë –∏ —Ç–æ–∫ –±–æ–ª—å—à–µ —á–µ–º —É –∑–∞—Ä–∞–¥–∫–∏, –∏ –≤—ã–≥–ª—è–¥–∏—Ç –Ω–∞–≥–ª—è–¥–Ω–µ–µ, –Ω–æ –ª–∞–º–ø–æ—á–∫–∏ –ø–æ–¥ —Ä—É–∫–æ–π –Ω–µ –Ω–∞—à–ª–æ—Å—å. –ë–æ–ª—å—à–µ –¥–∏—á–∏ # –¢–∞–∫ –∫–∞–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–æ–π —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–∞–º–∫–∞—Ö –ë–∏—Ç—Ä–∏–∫—Å24, —É–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞–≥—Ä—É–∑–∫–æ–π –º—ã –º–æ–∂–µ–º —á–µ—Ä–µ–∑ –±–∏–∑–Ω–µ—Å –ø—Ä–æ—Ü–µ—Å—Å. –ù–∞–ø—Ä–∏–º–µ—Ä:\n–¢–æ –µ—Å—Ç—å, –º—ã –º–æ–∂–µ–º –≤–∫–ª—é—á–∞—Ç—å –Ω–∞–≥—Ä—É–∑–∫—É –ø—Ä–∏ –Ω–∞—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –∫–∞–∫–∏—Ö-—Ç–æ —É—Å–ª–æ–≤–∏–π –≤ –±–ø. –ù–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ª–∏–¥–∞, –º—ã –º–æ–∂–µ–º –∑–∞—Å–µ—á—å —á–∞—Å –≤—Ä–µ–º–µ–Ω–∏, –∏ —á–µ—Ä–µ–∑ —á–∞—Å –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ª–∏–¥–∞. –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ –±—ã–ª –∏–∑–º–µ–Ω—ë–Ω, –≤–∫–ª—é—á–∞—Ç—å –Ω–∞–≥—Ä—É–∑–∫—É –¥–ª—è —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞.\n–ù–∞ —ç—Ç–æ–º –≤—Å—ë. –ö—Ç–æ –æ—Å–∏–ª–∏–ª - —Ç–æ—Ç —É–º–Ω–∏—á–∫–∞.\n","date":"3 –∏—é–Ω—è 2024","externalUrl":null,"permalink":"/posts/bitrix-cloud-part-1/","section":"–ü–æ—Å—Ç—ã","summary":"Disclaimer # –û–ø–∏—Å–∞–Ω–Ω–æ–µ –Ω–∏–∂–µ, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º –∫ –¥–µ–π—Å—Ç–≤–∏—é, –Ω–µ –∏—Å–ø—ã—Ç–∞–Ω–æ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –∏ –ø–æ —Å—É—Ç–∏ —è–≤–ª—è–µ—Ç—Å—è –ª–∏—à—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–µ–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –æ–±–ª–∞—á–Ω—ã—Ö –ø–æ—Ä—Ç–∞–ª–æ–≤ Bitrix24.\n–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç –∑–∞–¥—É–º—ã–≤–∞–ª—Å—è –µ—â—ë –∫–æ–≥–¥–∞ –ø–æ—Ä—Ç–∞–ª—ã Bitrix24 —Å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º —Ç–∞—Ä–∏—Ñ–æ–º –ø–æ–∑–≤–æ–ª—è–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å REST api.\n–ò–¥–µ—è # –ó–∞–¥—É–º–∫–∞ —Å–ª–µ–¥—É—é—â–∞—è. –í bitrix24 –µ—Å—Ç—å –º–µ—Ö–∞–Ω–∏–∑–º PushAndPull (–ø–æ —Å—É—Ç–∏ —ç—Ç–æ –æ–±—ã—á–Ω—ã–π websocket).","title":"–û–±–ª–∞–∫–æ –Ω–µ –ø—Ä–∏–≥–æ–≤–æ—Ä (—á–∞—Å—Ç—å 1)","type":"posts"},{"content":"","date":"3 –∏—é–Ω—è 2024","externalUrl":null,"permalink":"/posts/","section":"–ü–æ—Å—Ç—ã","summary":"","title":"–ü–æ—Å—Ç—ã","type":"posts"},{"content":"","date":"3 –∏—é–Ω—è 2024","externalUrl":null,"permalink":"/tags/%D1%8D%D0%BA%D1%81%D0%BF%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D1%8B/","section":"Tags","summary":"","title":"–≠–∫—Å–ø–µ—Ä–µ–º–µ–Ω—Ç—ã","type":"tags"}]